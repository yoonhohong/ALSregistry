Date_visit = col_date(format = "%Y.%m.%d"),
Wt = col_double(),
FVC_percent = col_double(),
ALSFRS = col_integer(),
Mitos = col_factor()
))
head(base)
head(dx)
temp = merge(base, dx, all.x = T, by = "Study_ID")
temp = merge(base, dx, all.x = T, by = "Study_ID") %>%
select(Study_ID, Hosp_ID, Name, Sex)
library(dplyr)
temp = merge(base, dx, all.x = T, by = "Study_ID") %>%
select(Study_ID, Hosp_ID, Name, Sex)
head(temp)
temp = dx %>%
mutate(age_dx = format(Date_dx, "%Y") - format(Date_birth, "%Y"))
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
head(temp)
head(temp$age_dx)
range(temp$age_dx)
range()
range(temp$age_dx)
range(temp$age_dx, na.rm = T)
temp[temp$age_dx < 20,]
temp[temp$age_dx < 20,]
library(janitor)
temp = remove_empty_rows(temp)
temp = temp %>%
remove_empty("rows")
temp[temp$age_dx < 20,]
temp = temp %>%
remove_empty("rows")
temp[temp$age_dx < 20,]
base = read_csv('ALS_Registry_Base.csv',
locale = locale(encoding = "CP949"),
col_types = cols_only(
Study_ID = col_character(),
Hosp_ID = col_character(),
Name = col_character()
))
head(base)
dx = read_csv("ALS_Registry_Dx.csv",
col_types = cols_only(
Study_ID = col_character(),
Sex = col_factor(),
Date_birth = col_date(format = "%Y.%m.%d"),
Date_onset = col_date(format = "%Y.%m.%d"),
Date_dx = col_date(format = "%Y.%m.%d"),
Date_enrollment = col_date(format = "%Y.%m.%d"),
Onset_region = col_factor(),
Dx = col_factor()
))
head(dx)
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
head(temp)
temp = temp %>%
remove_empty("rows")
head(temp)
temp[temp$age_dx < 20, ]
dim(temp)
temp = temp %>%
drop_na()
temp[temp$age_dx < 20, ]
?drop_na
base = read_csv('ALS_Registry_Base.csv',
locale = locale(encoding = "CP949"),
col_types = cols_only(
Study_ID = col_character(),
Hosp_ID = col_character(),
Name = col_character()
))
dx = read_csv("ALS_Registry_Dx.csv",
col_types = cols_only(
Study_ID = col_character(),
Sex = col_factor(),
Date_birth = col_date(format = "%Y.%m.%d"),
Date_onset = col_date(format = "%Y.%m.%d"),
Date_dx = col_date(format = "%Y.%m.%d"),
Date_enrollment = col_date(format = "%Y.%m.%d"),
Onset_region = col_factor(),
Dx = col_factor()
))
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
temp = temp[-which(apply(temp, 1, function(x) all(is.na(x)))), ]
temp[temp$age_dx < 20, ]
temp = temp[-which(apply(temp, 1, function(x)all(is.na(x)))), ]
temp[temp$age_dx < 20, ]
head(temp)
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
head(temp)
temp = temp[-which(apply(temp, 1, function(x)all(is.na(x)))), ]
head(temp)
temp[temp$age_dx < 20, ]
temp[temp$age_dx < 20, ]
temp = temp[-which(apply(temp, 2, function(x)all(is.na(x)))), ]
temp[temp$age_dx < 20, ]
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
head(temp)
temp[temp$age_dx < 20, ]
?apply
?filter_all
temp = temp %>%
filter_all(!any_vars(is.na(.)))
temp = temp %>%
filter_all(any_vars(!is.na(.)))
temp[temp$age_dx < 20, ]
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
temp = temp %>%
filter_all(all_vars(is.na(.)))
temp[temp$age_dx < 20, ]
temp = temp %>%
filter_all(any_vars(!is.na(.)))
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
temp = temp %>%
filter_all(any_vars(!is.na(.)))
temp[temp$age_dx < 20, ]
temp[temp$age_dx < 20, ]
dim(base)
dim(dx)
tail(base)
library(janitor)
base = base %>%
remove_empty("rows")
dim(base)
dx = read_csv("ALS_Registry_Dx.csv",
col_types = cols_only(
Study_ID = col_character(),
Sex = col_factor(),
Date_birth = col_date(format = "%Y.%m.%d"),
Date_onset = col_date(format = "%Y.%m.%d"),
Date_dx = col_date(format = "%Y.%m.%d"),
Date_enrollment = col_date(format = "%Y.%m.%d"),
Onset_region = col_factor(),
Dx = col_factor()
))
tail(dx)
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
temp[temp$age_dx < 20, ]
dim(temp)
dim(dx)
dx = dx %>% remove_empty("rows")
dx = dx %>% remove_empty("rows")
dim(dx)
tail(dx)
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
temp[temp$age_dx < 20, ]
temp = temp %>% remove_empty("rows")
temp[temp$age_dx < 20, ]
base = read_csv('ALS_Registry_Base.csv',
locale = locale(encoding = "CP949"),
col_types = cols_only(
Study_ID = col_character(),
Hosp_ID = col_character(),
Name = col_character()
)) %>% remove_empty("rows")
dx = read_csv("ALS_Registry_Dx.csv",
col_types = cols_only(
Study_ID = col_character(),
Sex = col_factor(),
Date_birth = col_date(format = "%Y.%m.%d"),
Date_onset = col_date(format = "%Y.%m.%d"),
Date_dx = col_date(format = "%Y.%m.%d"),
Date_enrollment = col_date(format = "%Y.%m.%d"),
Onset_region = col_factor(),
Dx = col_factor()
)) %>% remove_empty("rows")
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
temp = temp %>% remove_empty("rows")
temp[temp$age_dx < 20, ]
?intersect
head(base)
temp = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y"))) %>%
intersect(base, by = "Study_ID") %>%
select(Study_ID, Hosp_ID, Name,Sex, age_dx)
dx = read_csv("ALS_Registry_Dx.csv",
col_types = cols_only(
Study_ID = col_character(),
Sex = col_factor(),
Date_birth = col_date(format = "%Y.%m.%d"),
Date_onset = col_date(format = "%Y.%m.%d"),
Date_dx = col_date(format = "%Y.%m.%d"),
Date_enrollment = col_date(format = "%Y.%m.%d"),
Onset_region = col_factor(),
Dx = col_factor()
)) %>% remove_empty("rows")
dx = dx %>%
mutate(age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
temp = intersect(base, dx, by = "Study_ID") %>%
select(Study_ID, Hosp_ID, Name,Sex, age_dx)
temp = merge(base, dx, all.x = T, by = "Study_ID") %>%
select(Study_ID, Hosp_ID, Name,Sex, age_dx)
head(temp)
dim(temp)
dx = read_csv("ALS_Registry_Dx.csv",
col_types = cols_only(
Study_ID = col_character(),
Sex = col_factor(),
Date_birth = col_date(format = "%Y.%m.%d"),
Date_onset = col_date(format = "%Y.%m.%d"),
Date_dx = col_date(format = "%Y.%m.%d"),
Date_enrollment = col_date(format = "%Y.%m.%d"),
Onset_region = col_factor(),
Dx = col_factor()
)) %>% remove_empty("rows")
dx = dx %>%
mutate(Age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
base = merge(base, dx, all.x = T, by = "Study_ID") %>%
select(Study_ID, Hosp_ID, Name,Sex, Age_dx)
runApp()
runApp()
runApp()
fu = read_csv('ALS_Registry_Followup.csv',
col_types = cols(
Study_ID = col_character(),
Date_visit = col_date(format = "%Y.%m.%d"),
Wt = col_double(),
FVC_percent = col_double(),
ALSFRS = col_integer(),
Mitos = col_factor()
))
getwd()
head(base)
runApp()
ggplot(fu, aes(x=Visit_interval, y=ALSFRS, group = Study_ID)) +
geom_point() + geom_line() + theme_light() +
theme(legend.position = "none") +
xlab("Time from enrollment (days)") +
ylab("ALSFRS-R") +
scale_color_manual("grey")
ggplot(fu, aes(x=Visit_interval, y=ALSFRS, group = Study_ID)) +
geom_point() + geom_line() + theme_light() +
theme(legend.position = "none") +
xlab("Time from enrollment (days)") +
ylab("ALSFRS-R") +
scale_line_manual("grey")
head(fu)
runApp()
fu = read_csv('ALS_Registry_Followup.csv',
col_types = cols(
Study_ID = col_character(),
Date_visit = col_date(format = "%Y.%m.%d"),
Wt = col_double(),
FVC_percent = col_double(),
ALSFRS = col_integer(),
Mitos = col_factor()
))
difftime(Date_visit, Date_visit[1], units = "days"))) %>%
filter(!is.na(ALSFRS))
head(fu)
fu_alsfrs = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "days"))) %>%
filter(!is.na(ALSFRS))
head(fu_alsfrs)
runApp()
runApp()
difftime(Date_visit, Date_visit[1], units = "days"))) %>%
filter(!is.na(ALSFRS))
fu_alsfrs = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "days"))) %>%
filter(!is.na(ALSFRS))
runApp()
head(base)
runApp()
head(fu_alsfrs)
p = ggplot() +
geom_line(data = fu_alsfrs, aes(x=Visit_interval, y=ALSFRS, group = Study_ID),
color="grey") +
geom_line(data = fu_alsfrs[fu_alsfrs$Study_ID %in% c(1,2),],
aes(x=Visit_interval, y=ALSFRS, group = Study_ID), color = "red") +
theme_light() +
theme(legend.position = "none") +
xlab("Time from enrollment (days)") +
ylab("ALSFRS-R")
p
runApp()
runApp()
runApp()
runApp()
runApp()
head(fu)
fu = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "days")))
fu_alsfrs = fu %>%
filter(!is.na(ALSFRS))
fu_fvc = fu %>%
filter(!is.na(FVC_percent))
runApp()
library(plotly)
library(plotly)
install.packages("plotly")
library(plotly)
runApp()
runApp()
runApp()
library(plotly)
runApp()
install.packages("ggplotly")
version
install.packages(“plotly”, repos=“http://cran.rstudio.com/ 160”, dependencies=TRUE)
install.packages(“plotly”, repos=“http://cran.rstudio.com/”, dependencies=TRUE)
install.packages(“plotly”, repos=“http://cran.rstudio.com/160”, dependencies=TRUE)
library(plotly)
runApp()
head(dx)
runApp()
head(dx)
runApp()
?as.Date
runApp()
head(fu)
runApp()
Sys.Date()
class(sys.date())
class(Sys.Date())
runApp()
?difftime
runApp()
head(dx)
runApp()
runApp()
runApp()
dx[dx$Study_ID == 1022,]
base[base$Study_ID == 1022,]
runApp()
runApp()
base[base$Name == "오종호",]
runApp()
head(dx)
runApp()
head(dx)
runApp()
head(fu)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(dx)
event = read_csv('ALS_Registry_Event.csv',
col_types = cols(
Study_ID = col_character(),
Event = col_factor(),
Date_event = col_date(format = "%Y.%m.%d")
)) %>% remove_empty("rows")
dim(event)
head(event)
tail(event)
runApp()
runApp()
runApp()
q()
shiny::runApp()
library(readr)
library(tidyr)
library(dplyr)
library(janitor)
# read in datasets imported from dropbox
base = read_csv('ALS_Registry_Base.csv',
locale = locale(encoding = "CP949"),
col_types = cols_only(
Study_ID = col_character(),
Hosp_ID = col_character(),
Name = col_character()
)) %>% remove_empty("rows")
dx = read_csv("ALS_Registry_Dx.csv",
col_types = cols_only(
Study_ID = col_character(),
Sex = col_factor(),
Date_birth = col_date(format = "%Y.%m.%d"),
Date_onset = col_date(format = "%Y.%m.%d"),
Date_dx = col_date(format = "%Y.%m.%d"),
Date_enrollment = col_date(format = "%Y.%m.%d"),
Onset_region = col_factor(),
Dx = col_factor()
)) %>% remove_empty("rows")
dx = dx %>%
mutate(Age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
base = merge(base, dx, all.x = T, by = "Study_ID") %>%
select(Study_ID, Hosp_ID, Name,Sex, Age_dx, Dx)
fu = read_csv('ALS_Registry_Followup.csv',
col_types = cols(
Study_ID = col_character(),
Date_visit = col_date(format = "%Y.%m.%d"),
Wt = col_double(),
FVC_percent = col_double(),
ALSFRS = col_integer(),
Mitos = col_factor()
))
fu = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "weeks")))
fu_alsfrs = fu %>%
filter(!is.na(ALSFRS))
fu_fvc = fu %>%
filter(!is.na(FVC_percent))
event = read_csv('ALS_Registry_Event.csv',
col_types = cols(
Study_ID = col_character(),
Event = col_factor(),
Date_event = col_date(format = "%Y.%m.%d")
)) %>% remove_empty("rows")
head(fu)
fu[fu$Study_ID == 1005,]
last(fu[fu$Study_ID == 1005,]$Date_visit)
fu = read_csv('ALS_Registry_Followup.csv',
col_types = cols(
Study_ID = col_character(),
Date_visit = col_date(format = "%Y.%m.%d"),
Wt = col_double(),
FVC_percent = col_double(),
ALSFRS = col_integer(),
Mitos = col_factor()
)) %>% remove_empty("rows")
fu = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "weeks")))
last(fu[fu$Study_ID == 1005,]$Date_visit)
runApp()
runApp()
event[event$Study_ID == 1024, ]
runApp()
event[event$Study_ID == 1024, ]
runApp()
event[event$Study_ID == 1024, ]
runApp()
event[event$Study_ID == 1024, ]
library(dplyr)
levels(event$Event)
runApp()
head(event)
event %>%
filter(Event == "NIV")
event %>%
filter(Study_ID == 1024) %>%
filter(Event == "NIV")
temp = event %>%
filter(Study_ID == 1024) %>%
filter(Event == "NIV")
temp$Date_event
class(temp$Date_event)
paste("A", temp$Date_event)
temp = event %>%
filter(Study_ID == 1024) %>%
filter(Event == "Gastrostomy")
temp
class(temp)
temp$Date_event
length(temp$Date_event)
runApp()
runApp()
temp = event %>%
filter(Study_ID %in% selected_id2()) %>%
filter(Event == "Gastrostomy")
temp = event %>%
filter(Study_ID == 1024) %>%
filter(Event == "Gastrostomy")
temp
is.na(temp)
is.null(temp)
length(nrow(temp))
temp
dim(temp)
runApp()
event[event$Study_ID == 1022,]
runApp()
event[event$Study_ID == 1019,]
runApp()
event[event$Study_ID == 1019,]
runApp()
q()
