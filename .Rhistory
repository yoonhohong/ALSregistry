col_types = cols(
Provider_Ocode = col_factor(),
Sample_Bcode = col_character()
))
bio2 = bio2[complete.cases(bio2),]
bio = merge(bio1, bio2, by = "Provider_Ocode")
head(bio)
head(bio2)
bio2 = read_csv("ALS_Registry_Biobank2.csv",
col_types = cols(
Provider_Ocode = col_factor(),
Sample_Bcode = col_character()
))
bio2 = bio2[complete.cases(bio2),]
bio1 = read_csv("ALS_Registry_Biobank1.csv",
col_types = cols(
Study_ID = col_factor(),
Hosp_ID = col_factor(),
Provider_Ocode = col_character()
))
bio1 = bio1[complete.cases(bio1),]
bio = merge(bio1, bio2, by = "Provider_Ocode")
head(bio)
head(bio1)
head(bio2)
summary(bio)
head(bio)
head(bio$Sample_Bcode)
dim(bio1)
length(unique(bio1$Provider_Ocode))
length(unique(bio1$Study_ID))
bio1[duplicated(bio1$Study_ID),]
bio1[bio1$Study_ID == 1070,]
dim(bio)
bio
dim(bio)
dim(bio2)
setdiff(bio2$Provider_Ocode, bio1$Provider_Ocode)
bio = merge(bio1, bio2, by = "Provider_Ocode")
head(bio)
summary(bio)
bio1 = read_csv("ALS_Registry_Biobank1.csv",
col_types = cols(
Study_ID = col_factor(),
Hosp_ID = col_factor(),
Provider_Ocode = col_factor()
))
bio1 = bio1[complete.cases(bio1),]
bio2 = read_csv("ALS_Registry_Biobank2.csv",
col_types = cols(
Provider_Ocode = col_factor(),
Sample_Bcode = col_character()
))
bio2 = bio2[complete.cases(bio2),]
dim(bio)
bio = merge(bio1, bio2, by = "Provider_Ocode")
dim(bio)
head(bio)
head(bio$Sample_Bcode)
head(bio$Sample_Bcode, 1)
summary(bio)
?merge
bio = merge(bio1, bio2, all.x = T, all.y = T, by = "Provider_Ocode")
head(bio)
dim(bio)
dim(bbio)
dim(bio2)
dim(bio1)
bio = merge(bio1, bio2, all.y = T, by = "Provider_Ocode")
dim(bio)
head(bio)
?grep
csf = bio[grep("CSF", bio$Sample_Bcode), ]
head(csf)
ser = bio[grep("SER", bio$Sample_Bcode), ]
buf = bio[grep("BUF", bio$Sample_Bcode), ]
pla = bio[grep("PLA", bio$Sample_Bcode), ]
ser$visit_no = regmatches(ser$Sample_Bcode, regexpr("SER[0-9][0-9]"))
ser$visit_no = regmatches(ser$Sample_Bcode, regexpr("SER[0-9][0-9]", ser$Sample_Bcode))
head(ser$visit_no)
ser$visit_no = regmatches(ser$Sample_Bcode, regexpr("SER..", ser$Sample_Bcode))
ser$visit_no = regmatches(ser$visit_no, regexpr("[0-9][0-9]", ser$visit_no))
ser$visit_no
ser$visit_no = as.integer(ser$visit_no)
head(ser$visit_no)
q()
shiny::runApp()
getwd()
list_files = list.files("./data", pattern="*.csv")
dx_file = paste("./data", list_files[grep("Dx", list_files)], sep = "/")
fu_file = paste("./data", list_files[grep("Follow", list_files)], sep = "/")
event_file = paste("./data", list_files[grep("Event", list_files)], sep = "/")
close_file = paste("./data", list_files[grep("Close", list_files)], sep = "/")
Biobank1_file = paste("./data", list_files[grep("Biobank1", list_files)], sep = "/")
Biobank2_file = paste("./data", list_files[grep("Biobank2", list_files)], sep = "/")
base_file = paste("./data", list_files[grep("Base", list_files)], sep = "/")
base = read_csv(base_file,
col_types = cols_only(
Study_ID = col_factor(),
Hosp_ID = col_character())
) %>%
remove_empty("rows")
head(base)
dx = read_csv(dx_file,
col_types = cols_only(
Study_ID = col_factor(),
Sex = col_factor(),
Date_birth = col_date(format = "%Y.%m.%d"),
Date_onset = col_date(format = "%Y.%m.%d"),
Date_dx = col_date(format = "%Y.%m.%d"),
Date_enrollment = col_date(format = "%Y.%m.%d"),
Onset_region = col_factor(),
Dx = col_factor()
)) %>% remove_empty("rows")
head(dx)
dx[11,]
dx[11,]
dx[25,]
dx[27,]
dx[dx$Study_ID == "1497",]
problemsO()
problems()
problem()
problems()
dx = dx %>%
mutate(Age_dx = as.numeric(format(Date_dx, "%Y")) -
as.numeric(format(Date_birth, "%Y")))
base = merge(base, dx, all.x = T, by = "Study_ID") %>%
select(Study_ID, Hosp_ID, Sex, Age_dx, Dx)
fu = read_csv(fu_file,
col_types = cols(
Study_ID = col_factor(),
Date_visit = col_date(format = "%Y.%m.%d"),
Wt = col_double(),
FVC_percent = col_double(),
ALSFRS = col_integer(),
Mitos = col_factor()
)) %>% remove_empty("rows")
fu = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "weeks")))
fu_alsfrs = fu %>%
filter(!is.na(ALSFRS))
fu_fvc = fu %>%
filter(!is.na(FVC_percent))
event = read_csv(event_file,
col_types = cols(
Study_ID = col_factor(),
Event = col_factor(),
Date_event = col_date(format = "%Y.%m.%d")
))
event = event[complete.cases(event),]
close = read_csv(close_file,
col_types = cols(
Study_ID = col_factor(),
Close_reason = col_factor(),
Date_close = col_date(format = "%Y.%m.%d")
))
close = close[complete.cases(close),]
bio1 = read_csv(Biobank1_file,
col_types = cols(
Study_ID = col_factor(),
Hosp_ID = col_factor(),
Provider_Ocode = col_factor()
))
bio1 = bio1[complete.cases(bio1),]
bio2 = read_csv(Biobank2_file,
col_types = cols(
Provider_Ocode = col_factor(),
Sample_Bcode = col_character()
))
bio2 = bio2[complete.cases(bio2),]
bio = merge(bio1, bio2, all.y = T, by = "Provider_Ocode")
ser = bio[grep("SER", bio$Sample_Bcode), ]
buf = bio[grep("BUF", bio$Sample_Bcode), ]
pla = bio[grep("PLA", bio$Sample_Bcode), ]
csf = bio[grep("CSF", bio$Sample_Bcode), ]
ser$visit_no = regmatches(ser$Sample_Bcode, regexpr("SER..", ser$Sample_Bcode))
ser$visit_no = regmatches(ser$visit_no, regexpr("[0-9][0-9]", ser$visit_no))
ser$visit_no = as.integer(ser$visit_no)
runApp()
runApp()
# Date of registry updated
date_update = strsplit(dx_file, split = "_")[[1]][3]
date_update_registry = as.Date(date_update, format = "%Y%m%d")
runApp()
Sys.Date()
date_update_registry
runApp()
head(fu)
difftime(Date_visit, Date_visit[1], units = "weeks"))) %>%
mutate(Time_from_latest_visit = as.numeric(
q
qq
difftime(Date_visit, Date_visit[1], units = "weeks"))) %>%
mutate(Time_from_latest_visit = as.numeric(
difftime(Date_visit, Date_visit[1], units = "weeks"))) %>%
mutate(Time_from_latest_visit = as.numeric(
head(fu)
fu = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "weeks"))) %>%
mutate(Time_from_latest_visit = as.numeric(
difftime(date_update_registry, last(Date_visit), units = "weeeks")))
fu = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "weeks"))) %>%
mutate(Time_from_latest_visit = as.numeric(
difftime(date_update_registry, last(Date_visit), units = "weeeks")))
date_update_registry
class(date_update)
class(date_update_registry)
difftime(Date_visit, Date_visit[1], units = "weeks"))) %>%
mutate(Time_from_latest_visit = as.numeric(
)
fu = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
mutate(Visit_interval = as.numeric(
difftime(Date_visit, Date_visit[1], units = "weeks"))) %>%
mutate(Time_from_latest_visit = as.numeric(
difftime(date_update_registry, last(Date_visit), units = "weeks")))
names(fu)
runApp()
head(close)
summary(close)
summary(base)
close = merge(base[,c("Study_ID")], close, all.x = T, by = "Study_ID")
head(close)
head(base)
close_all = merge(base[,c("Study_ID")], close, all.x = T, by = "Study_ID")
dim(close)
length(unique(close$Study_ID))
dim(base)
length(unique(base$Study_ID))
base[,c("Study_ID")]
?merge
close_all = merge(base[,c("Study_ID")], close, all = T, by = "Study_ID")
close_all = merge(base, close, all.x = T, by = "Study_ID")
head(close_all)
close_all = merge(base, close, all.x = T, by = "Study_ID") %>%
select(Study_ID, Close_reason, Date_close) %>%
mutate(Close_reason = ifelse(is.na(Close_reason), "Undefined", Close_reason))
head(close_all)
close_all = merge(base, close, all.x = T, by = "Study_ID") %>%
mutate(Close_reason = as.character(Close_reason)) %>%
select(Study_ID, Close_reason, Date_close) %>%
mutate(Close_reason = ifelse(is.na(Close_reason), "Undefined",
Close_reason))
head(close_all)
fu_latest = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
filter(Date_visit == last(Date_visit)) %>%
mutate(Date_visit_latest = Date_visit) %>%
select(Study_ID, Date_visit_latest)
dim(fu_latest)
close_with_latest_visit = merge(close_all, fu_latest, by = "Study_ID")
dim(close_with_latest_visit)
dim(close_all)
dim(fu_latest)
length(unique(fu_latest$Study_ID))
length(unique(close_all$Study_ID))
setdiff(fu_latest$Study_ID, close_all$Study_ID)
setdiff(close_all$Study_ID, fu_latest$Study_ID)
head(close_with_latest_visit)
close_with_latest_visit[close_with_latest_visit$Study_ID == "1136",]
close_with_latest_visit[close_with_latest_visit$Study_ID == "40",]
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID")
dim(close_with_latest_visit)
close_with_latest_visit[close_with_latest_visit$Study_ID == "40",]
close_with_latest_visit[close_with_latest_visit$Study_ID == "1136",]
head(close)
head(event)
tracheostomy = event %>%
filter(Event == "Tracheostomy")
head(close)
close_tracheo = merge(close, tracheostomy, all = T, by = "Study_ID")
summary(close_tracheo)
dim(close_tracheo)
dim(unique(close_tracheo$Study_ID))
length(unique(close_tracheo$Study_ID))
subset(close_tracheo, Event == "Tracheostomy")
close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = ifelse(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_close = ifelse(Event == "Tracheostomy",
Date_event, Date_close))
subset(close_tracheo, Event == "Tracheostomy")
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = ifelse(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_close = ifelse(Event == "Tracheostomy",
Date_event, Date_close))
subset(close_tracheo_first, Event == "Tracheostomy")
str(close_tracheo)
Date_event, Date_close), format = "%Y-%m-%d")
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = ifelse(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_close = as.Date(ifelse(Event == "Tracheostomy",
Date_event, Date_close), format = "%Y-%m-%d"))
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = ifelse(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_close = as.Date(ifelse(Event == "Tracheostomy",
Date_event, Date_close),
format = "%Y-%m-%d"))
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = ifelse(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_close = ifelse(Event == "Tracheostomy",
as.Date(Date_event, format = "%Y-%m-%d"),
as.Date(Date_close, format = "%Y-%m-%d")))
subset(close_tracheo_first, Event == "Tracheostomy")
summary(close_tracheo)
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = ifelse(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_outcome = ifelse(Event == "Tracheostomy",
as.Date(Date_event, format = "%Y-%m-%d"),
as.Date(Date_close, format = "%Y-%m-%d")))
subset(close_tracheo_first, Event == "Tracheostomy")
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = ifelse(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_outcome = if_else(Event == "Tracheostomy",
Date_event,
Date_close))
subset(close_tracheo_first, Event == "Tracheostomy")
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = ifelse(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_outcome = if_else(Event == "Tracheostomy",
Date_event,
Date_close)) %>%
select(Study_ID, Close_reason, Date_outcome)
close_all = merge(base, close_tracheo_first, all.x = T, by = "Study_ID") %>%
mutate(Close_reason = as.character(Close_reason)) %>%
select(Study_ID, Close_reason, Date_outcome) %>%
mutate(Close_reason = ifelse(is.na(Close_reason), "Undefined",
Close_reason))
fu_latest = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
filter(Date_visit == last(Date_visit)) %>%
mutate(Date_visit_latest = Date_visit) %>%
select(Study_ID, Date_visit_latest)
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID")
dim(close_with_latest_visit)
summary(close_with_latest_visit)
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = if_else(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_outcome = if_else(Event == "Tracheostomy",
Date_event,
Date_close)) %>%
select(Study_ID, Close_reason, Date_outcome)
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = if_else(Event == "Tracheostomy", "Tracheostomy",
as.character(Close_reason))) %>%
mutate(Date_outcome = if_else(Event == "Tracheostomy",
Date_event,
Date_close)) %>%
select(Study_ID, Close_reason, Date_outcome)
close_all = merge(base, close_tracheo_first, all.x = T, by = "Study_ID") %>%
select(Study_ID, Close_reason, Date_outcome) %>%
mutate(Close_reason = if_else(is.na(Close_reason), "Undefined",
Close_reason))
fu_latest = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
filter(Date_visit == last(Date_visit)) %>%
mutate(Date_visit_latest = Date_visit) %>%
select(Study_ID, Date_visit_latest)
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID")
summary(close_with_latest_visit)
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID") %>%
mutate(Close_reason = factor(Close_reason))
summary(close_with_latest_visit)
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = if_else(Event == "Tracheostomy", "Tracheostomy",
as.character(Close_reason))) %>%
mutate(Date_outcome = if_else(Event == "Tracheostomy",
Date_event,
Date_close)) %>%
select(Study_ID, Close_reason, Date_outcome)
head(close_tracheo_first)
close_tracheo_first = close_tracheo %>%
mutate(Close_reason = as.character(Close_reason)) %>%
mutate(Close_reason = if_else(Event == "Tracheostomy", "Tracheostomy",
Close_reason)) %>%
mutate(Date_outcome = if_else(Event == "Tracheostomy",
Date_event,
Date_close)) %>%
select(Study_ID, Close_reason, Date_outcome)
close_all = merge(base, close_tracheo_first, all.x = T, by = "Study_ID") %>%
select(Study_ID, Close_reason, Date_outcome) %>%
mutate(Close_reason = if_else(is.na(Close_reason), "Undefined",
Close_reason))
fu_latest = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
filter(Date_visit == last(Date_visit)) %>%
mutate(Date_visit_latest = Date_visit) %>%
select(Study_ID, Date_visit_latest)
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID") %>%
mutate(Close_reason = factor(Close_reason))
head(close_with_latest_visit)
summary(close_with_latest_visit)
head(close)
head(tracheostomy)
tracheo = event %>%
filter(Event == "Tracheostomy")
colnames(tracheo) = c("Study_ID", "Close_reason", "Date_close")
close_tracheo = rbiond(close, tracheo)
close_tracheo = rbind(close, tracheo)
close_tracheo_first = close_tracheo %>%
group_by(Study_ID) %>%
arrange(Date_close) %>%
filter(first(Date_close))
close_tracheo_first = close_tracheo %>%
group_by(Study_ID) %>%
arrange(Date_close) %>%
filter(Date_close == first(Date_close))
dim(close_tracheo)
dim(close_tracheo_first)
close_all = merge(base, close_tracheo_first, all.x = T, by = "Study_ID") %>%
mutate(Close_reason = as.character(Close_reason)) %>%
select(Study_ID, Close_reason, Date_close) %>%
mutate(Close_reason = if_else(is.na(Close_reason), "Undefined",
Close_reason))
head(close_all)
fu_latest = fu %>%
group_by(Study_ID) %>%
arrange(Date_visit) %>%
filter(Date_visit == last(Date_visit)) %>%
mutate(Date_visit_latest = Date_visit) %>%
select(Study_ID, Date_visit_latest)
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID")
head(close_with_latest_visit)
source('~/Documents/GitHub/ALSregistry2/global.R', echo=TRUE)
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID")
summary(close_with_latest_visit)
close_with_latest_visit$Close_reason = factor(close_with_latest_visit$Close_reason)
summary(close_with_latest_visit)
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID")
close_with_latest_visit$Close_reason = factor(
close_with_latest_visit$Close_reason, levels = list(
Undefined = "Undefined",
Death_or_tracheostomy = c("Death", "Tracheostomy"),
Refer = "Refer",
Lost_to_fu = "Lost to f/u"
))
summary(close_with_latest_visit)
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID")
close_with_latest_visit$Close_reason = factor(
close_with_latest_visit$Close_reason)
levels(close_with_latest_visit$Close_reason) = list(
Undefined = "Undefined"
Death_or_tracheostomy = c("Death", "Tracheostomy")
Refer = "Refer"
Lost_to_fu = "Lost to f/u"
)
levels(close_with_latest_visit$Close_reason) = list(
c(Undefined = "Undefined",
Death_or_tracheostomy = c("Death", "Tracheostomy"),
Refer = "Refer",
Lost_to_fu = "Lost to f/u"
))
close_with_latest_visit = merge(close_all, fu_latest, all = T,
by = "Study_ID")
close_with_latest_visit$Close_reason = factor(
close_with_latest_visit$Close_reason)
levels(close_with_latest_visit$Close_reason) = list(
Undefined = "Undefined",
Death_or_tracheostomy = c("Death", "Tracheostomy"),
Refer = "Refer",
Lost_to_fu = "Lost to f/u")
summary(close_with_latest_visit)
runApp()
runApp()
runApp()
runApp()
runApp()
head(close_with_latest_visit)
dim(close_with_latest_visit)
runApp()
q()
